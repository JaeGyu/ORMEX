<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence" version="2.1">

    <!--연결할 데이터베이스당 하나의 영속성 유닛을 등록 한다.
    	영속성유닛에는 고유한 이름을 부여해야 하는데 여기서는 jpabook라는 이름을 부여 했다.
    -->
    <persistence-unit name="jpabook">

        <properties>

            <!-- 필수 속성 -->
            <property name="javax.persistence.jdbc.driver" value="org.h2.Driver"/>
            <property name="javax.persistence.jdbc.user" value="sa"/>
            <property name="javax.persistence.jdbc.password" value=""/>
            <property name="javax.persistence.jdbc.url" value="jdbc:h2:tcp://localhost/~/test"/>
            <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect" />

            <!-- 옵션 -->
            <property name="hibernate.show_sql" value="true" />
            <property name="hibernate.format_sql" value="true" />
            <property name="hibernate.use_sql_comments" value="true" />
            <property name="hibernate.id.new_generator_mappings" value="true" />

			<!-- 아래것을 해주면 애플리케이션 실행할때 기존테이블 싹 날리고 @Entity를 참조해서 다시만들어준다.
			     아래것은 개발환경에서만 할 것 운영에서 하면 큰일 남
			     이렇게 하면 개발하면서 db를 만질일이 거의 없다.Entity만 만들어 놓으면 알아서 
			     테이블을 만들어 준다. 즉 Entity로 개발을 다 끝내 놓고 오픈 직전에 만들어진 테이블을
			     보고 테이블 리팩토링을 해준다. -->
            <property name="hibernate.hbm2ddl.auto" value="create" />
        </properties>
    </persistence-unit>

</persistence>